{"version":3,"file":"app/api/matches/route.js","mappings":"oFAAAA,CAAAA,EAAAC,OAAA,CAAAC,QAAA,0CCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,yXCIO,IAAMC,EAAU,OAEhB,eAAeC,EAAIC,CAAoB,EAC5C,GAAI,CACF,GAAM,CAAEC,aAAAA,CAAY,CAAE,CAAG,IAAIC,IAAIF,EAAQG,GAAG,EACtCC,EAAQH,EAAaI,GAAG,CAAC,SACzBC,EAASL,EAAaI,GAAG,CAAC,UAE1BE,EAAU,MAAMC,CAAAA,EAAAA,EAAAA,EAAAA,IAGlBC,EAAmBF,EACvB,GAAIH,EAAO,CACT,IAAMM,EAAWC,SAASP,EAAO,IAC3BQ,EAAYN,EAASK,SAASL,EAAQ,IAAM,EAClDG,EAAmBF,EAAQM,KAAK,CAACD,EAAWA,EAAYF,EAC1D,CAEA,OAAOI,EAAAA,EAAYA,CAACC,IAAI,CAAC,CACvBR,QAASE,EACTO,MAAOT,EAAQU,MAAM,CACrBb,MAAOA,EAAQO,SAASP,EAAO,IAAMG,EAAQU,MAAM,CACnDX,OAAQA,EAASK,SAASL,EAAQ,IAAM,CAC1C,EACF,CAAE,MAAOY,EAAO,CAEd,OADAC,QAAQD,KAAK,CAAC,yBAA0BA,GACjCJ,EAAAA,EAAYA,CAACC,IAAI,CACtB,CAAEG,MAAO,wBAAyB,EAClC,CAAEE,OAAQ,GAAI,EAElB,CACF,CAGO,eAAeC,IACpB,OAAO,IAAIP,EAAAA,EAAYA,CAAC,KAAM,CAC5BM,OAAQ,IACRE,QAAS,CACP,8BAA+B,IAC/B,+BAAgC,eAChC,+BAAgC,cAClC,CACF,EACF,CCxCA,IAAAC,EAAA,IAAwBC,EAAAC,mBAAmB,EAC3CC,WAAA,CACAC,KAAcC,EAAAC,CAAS,CAAAC,SAAA,CACvBC,KAAA,qBACAC,SAAA,eACAC,SAAA,QACAC,WAAA,uBACA,EACAC,iBAAA,kEACAC,iBAVA,GAWAC,SAAYC,CACZ,GAIA,CAAQC,oBAAAA,CAAA,CAAAC,6BAAAA,CAAA,CAAAC,YAAAA,CAAA,EAAiElB,EACzEmB,EAAA,qBACA,SAAAC,IACA,MAAW,GAAAC,EAAAC,EAAA,EAAW,CACtBJ,YAAAA,EACAD,6BAAAA,CACA,EACA,CC1BO,IAAAM,EAAqBC,EAC5BC,EAAeC,EAAAC,CAAsB,CAAAC,IAAA,CAAM5B","sources":["webpack://_N_E/external commonjs \"node:async_hooks\"","webpack://_N_E/external commonjs \"node:buffer\"","webpack://_N_E/./src/app/api/matches/route.ts","webpack://_N_E/./src/app/api/matches/route.ts?e873","webpack://_N_E/"],"sourcesContent":["module.exports = require(\"node:async_hooks\");","module.exports = require(\"node:buffer\");","import { NextRequest, NextResponse } from 'next/server'\nimport { loadMatchesFromS3 } from '@/lib/data-fetcher'\n\n// Configure Edge Runtime for Cloudflare Pages\nexport const runtime = 'edge'\n\nexport async function GET(request: NextRequest) {\n  try {\n    const { searchParams } = new URL(request.url)\n    const limit = searchParams.get('limit')\n    const offset = searchParams.get('offset')\n\n    const matches = await loadMatchesFromS3()\n\n    // Apply pagination if requested\n    let paginatedMatches = matches\n    if (limit) {\n      const limitNum = parseInt(limit, 10)\n      const offsetNum = offset ? parseInt(offset, 10) : 0\n      paginatedMatches = matches.slice(offsetNum, offsetNum + limitNum)\n    }\n\n    return NextResponse.json({\n      matches: paginatedMatches,\n      total: matches.length,\n      limit: limit ? parseInt(limit, 10) : matches.length,\n      offset: offset ? parseInt(offset, 10) : 0,\n    })\n  } catch (error) {\n    console.error('Error loading matches:', error)\n    return NextResponse.json(\n      { error: 'Failed to load matches' },\n      { status: 500 }\n    )\n  }\n}\n\n// Enable CORS for development\nexport async function OPTIONS() {\n  return new NextResponse(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type',\n    },\n  })\n}","import { AppRouteRouteModule } from \"next/dist/server/future/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/future/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"/Users/romanvasilev/true-coef-site/src/app/api/matches/route.ts\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/matches/route\",\n        pathname: \"/api/matches\",\n        filename: \"route\",\n        bundlePath: \"app/api/matches/route\"\n    },\n    resolvedPagePath: \"/Users/romanvasilev/true-coef-site/src/app/api/matches/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/matches/route\";\nfunction patchFetch() {\n    return _patchFetch({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\nexport { routeModule, requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, originalPathname, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","import { EdgeRouteModuleWrapper } from \"next/dist/server/web/edge-route-module-wrapper\";\n// Import the userland code.\nimport * as module from \"next-app-loader?name=app%2Fapi%2Fmatches%2Froute&page=%2Fapi%2Fmatches%2Froute&pagePath=private-next-app-dir%2Fapi%2Fmatches%2Froute.ts&appDir=%2FUsers%2Fromanvasilev%2Ftrue-coef-site%2Fsrc%2Fapp&appPaths=%2Fapi%2Fmatches%2Froute&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!private-next-app-dir/api/matches/route.ts?__next_edge_ssr_entry__\";\nexport const ComponentMod = module;\nexport default EdgeRouteModuleWrapper.wrap(module.routeModule);\n\n//# sourceMappingURL=edge-app-route.js.map"],"names":["module","exports","require","runtime","GET","request","searchParams","URL","url","limit","get","offset","matches","loadMatchesFromS3","paginatedMatches","limitNum","parseInt","offsetNum","slice","NextResponse","json","total","length","error","console","status","OPTIONS","headers","routeModule","module_compiled","AppRouteRouteModule","definition","kind","route_kind","x","APP_ROUTE","page","pathname","filename","bundlePath","resolvedPagePath","nextConfigOutput","userland","route_namespaceObject","requestAsyncStorage","staticGenerationAsyncStorage","serverHooks","originalPathname","patchFetch","patch_fetch","XH","ComponentMod","route_next_edge_ssr_entry_namespaceObject","next_edge_app_route_loaderabsolutePagePath_private_next_app_dir_2Fapi_2Fmatches_2Froute_ts_page_2Fapi_2Fmatches_2Froute_appDirLoader_bmV4dC1hcHAtbG9hZGVyP25hbWU9YXBwJTJGYXBpJTJGbWF0Y2hlcyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGbWF0Y2hlcyUyRnJvdXRlJnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGbWF0Y2hlcyUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnJvbWFudmFzaWxldiUyRnRydWUtY29lZi1zaXRlJTJGc3JjJTJGYXBwJmFwcFBhdGhzPSUyRmFwaSUyRm1hdGNoZXMlMkZyb3V0ZSZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCE_3D_nextConfigOutput_preferredRegion_middlewareConfig_e30_3D_","edge_route_module_wrapper","a","wrap"],"sourceRoot":""}