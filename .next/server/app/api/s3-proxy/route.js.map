{"version":3,"file":"app/api/s3-proxy/route.js","mappings":"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","sources":["webpack://_N_E/external commonjs \"node:async_hooks\"","webpack://_N_E/external commonjs \"node:buffer\"","webpack://_N_E/./src/app/api/s3-proxy/route.ts","webpack://_N_E/./src/app/api/s3-proxy/route.ts?fff0","webpack://_N_E/?7376"],"sourcesContent":["module.exports = require(\"node:async_hooks\");","module.exports = require(\"node:buffer\");","import { NextRequest, NextResponse } from 'next/server'\n\nconst BUCKET_URL = 'https://storage.yandexcloud.net/screen-shared'\n\n// Cache configuration for Edge Runtime\nexport const runtime = 'edge'\nexport const revalidate = 300 // 5 minutes cache\n\n/**\n * API proxy для обхода блокировок Yandex Cloud Storage российскими провайдерами.\n *\n * Этот эндпоинт проксирует запросы к S3, позволяя обойти блокировки на уровне провайдера,\n * так как запросы идут через домен приложения, а не напрямую к yandexcloud.net\n */\nexport async function GET(request: NextRequest) {\n  try {\n    const { searchParams } = new URL(request.url)\n    const path = searchParams.get('path')\n    const action = searchParams.get('action') // 'list' or 'fetch'\n\n    if (!path) {\n      return NextResponse.json(\n        { error: 'Missing path parameter' },\n        { status: 400 }\n      )\n    }\n\n    // List files in S3 folder\n    if (action === 'list') {\n      const listUrl = `${BUCKET_URL}/?list-type=2&prefix=${encodeURIComponent(path)}`\n\n      console.log(`[S3 Proxy] Listing files: ${listUrl}`)\n\n      const response = await fetch(listUrl, {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/xml',\n          'User-Agent': 'Coefly-App/1.0'\n        },\n        // Важно: не передаём credentials для публичного S3\n        cache: 'no-store' // Отключаем кэш для списков файлов\n      })\n\n      if (!response.ok) {\n        console.error(`[S3 Proxy] List failed: ${response.status} ${response.statusText}`)\n        return NextResponse.json(\n          { error: `S3 request failed: ${response.statusText}` },\n          { status: response.status }\n        )\n      }\n\n      const xmlText = await response.text()\n\n      return new NextResponse(xmlText, {\n        status: 200,\n        headers: {\n          'Content-Type': 'application/xml',\n          'Cache-Control': 'public, s-maxage=300, stale-while-revalidate=600',\n          'Access-Control-Allow-Origin': '*'\n        }\n      })\n    }\n\n    // Fetch individual file\n    const fileUrl = path.startsWith('http') ? path : `${BUCKET_URL}/${path}`\n\n    console.log(`[S3 Proxy] Fetching file: ${fileUrl}`)\n\n    const response = await fetch(fileUrl, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'User-Agent': 'Coefly-App/1.0'\n      },\n      // Кэшируем файлы на 5 минут\n      next: { revalidate: 300 }\n    })\n\n    if (!response.ok) {\n      if (response.status === 404) {\n        return NextResponse.json(\n          { error: 'File not found' },\n          { status: 404 }\n        )\n      }\n\n      console.error(`[S3 Proxy] Fetch failed: ${response.status} ${response.statusText}`)\n      return NextResponse.json(\n        { error: `S3 request failed: ${response.statusText}` },\n        { status: response.status }\n      )\n    }\n\n    const data = await response.json()\n\n    return NextResponse.json(data, {\n      status: 200,\n      headers: {\n        'Cache-Control': 'public, s-maxage=300, stale-while-revalidate=600',\n        'Access-Control-Allow-Origin': '*'\n      }\n    })\n\n  } catch (error) {\n    console.error('[S3 Proxy] Error:', error)\n    return NextResponse.json(\n      { error: 'Internal proxy error', details: error instanceof Error ? error.message : 'Unknown error' },\n      { status: 500 }\n    )\n  }\n}\n\n// Enable CORS preflight\nexport async function OPTIONS() {\n  return new NextResponse(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type',\n    },\n  })\n}\n","import { AppRouteRouteModule } from \"next/dist/server/future/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/future/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"/Users/romanvasilev/true-coef-site/src/app/api/s3-proxy/route.ts\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/s3-proxy/route\",\n        pathname: \"/api/s3-proxy\",\n        filename: \"route\",\n        bundlePath: \"app/api/s3-proxy/route\"\n    },\n    resolvedPagePath: \"/Users/romanvasilev/true-coef-site/src/app/api/s3-proxy/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/s3-proxy/route\";\nfunction patchFetch() {\n    return _patchFetch({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\nexport { routeModule, requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, originalPathname, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","import { EdgeRouteModuleWrapper } from \"next/dist/server/web/edge-route-module-wrapper\";\n// Import the userland code.\nimport * as module from \"next-app-loader?name=app%2Fapi%2Fs3-proxy%2Froute&page=%2Fapi%2Fs3-proxy%2Froute&pagePath=private-next-app-dir%2Fapi%2Fs3-proxy%2Froute.ts&appDir=%2FUsers%2Fromanvasilev%2Ftrue-coef-site%2Fsrc%2Fapp&appPaths=%2Fapi%2Fs3-proxy%2Froute&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!private-next-app-dir/api/s3-proxy/route.ts?__next_edge_ssr_entry__\";\nexport const ComponentMod = module;\nexport default EdgeRouteModuleWrapper.wrap(module.routeModule);\n\n//# sourceMappingURL=edge-app-route.js.map"],"names":["module","exports","require","BUCKET_URL","runtime","revalidate","GET","request","searchParams","URL","url","path","get","action","NextResponse","json","error","status","listUrl","encodeURIComponent","console","log","response","fetch","method","headers","cache","ok","statusText","xmlText","text","fileUrl","startsWith","next","data","details","Error","message","OPTIONS","routeModule","module_compiled","AppRouteRouteModule","definition","kind","route_kind","x","APP_ROUTE","page","pathname","filename","bundlePath","resolvedPagePath","nextConfigOutput","userland","route_namespaceObject","requestAsyncStorage","staticGenerationAsyncStorage","serverHooks","originalPathname","patchFetch","patch_fetch","XH","ComponentMod","route_next_edge_ssr_entry_namespaceObject","next_edge_app_route_loaderabsolutePagePath_private_next_app_dir_2Fapi_2Fs3_proxy_2Froute_ts_page_2Fapi_2Fs3_proxy_2Froute_appDirLoader_bmV4dC1hcHAtbG9hZGVyP25hbWU9YXBwJTJGYXBpJTJGczMtcHJveHklMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRnMzLXByb3h5JTJGcm91dGUmcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZzMy1wcm94eSUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnJvbWFudmFzaWxldiUyRnRydWUtY29lZi1zaXRlJTJGc3JjJTJGYXBwJmFwcFBhdGhzPSUyRmFwaSUyRnMzLXByb3h5JTJGcm91dGUmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0Qh_nextConfigOutput_preferredRegion_middlewareConfig_e30_3D_","edge_route_module_wrapper","a","wrap"],"sourceRoot":""}