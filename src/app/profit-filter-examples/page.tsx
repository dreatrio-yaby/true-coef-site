'use client'

import { useState } from 'react'
import { Slider } from '@/components/ui/slider'
import { Button } from '@/components/ui/button'
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'
import { Badge } from '@/components/ui/badge'
import { Switch } from '@/components/ui/switch'
import { Label } from '@/components/ui/label'
import { Info, TrendingUp, Trophy, Zap, Target, ChevronDown } from 'lucide-react'
import { cn } from '@/lib/utils'
import {
  Tabs,
  TabsContent,
  TabsList,
  TabsTrigger,
} from '@/components/ui/tabs'
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from '@/components/ui/select'
import {
  Tooltip,
  TooltipContent,
  TooltipProvider,
  TooltipTrigger,
} from '@/components/ui/tooltip'
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuLabel,
  DropdownMenuRadioGroup,
  DropdownMenuRadioItem,
  DropdownMenuSeparator,
  DropdownMenuTrigger,
} from '@/components/ui/dropdown-menu'

const profitLevels = [
  { value: 0, label: '–í—Å–µ —Å—Ç–∞–≤–∫–∏', icon: 'üìä', color: 'text-gray-600', description: '–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –º–∞—Ç—á–∏' },
  { value: 0.02, label: '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è', icon: '‚öñÔ∏è', color: 'text-blue-600', description: '–í—ã–≥–æ–¥–∞ –æ—Ç 2%' },
  { value: 0.08, label: '–•–æ—Ä–æ—à–∞—è', icon: '‚úÖ', color: 'text-green-600', description: '–í—ã–≥–æ–¥–∞ –æ—Ç 8%' },
  { value: 0.15, label: '–û—Ç–ª–∏—á–Ω–∞—è', icon: 'üéØ', color: 'text-orange-600', description: '–í—ã–≥–æ–¥–∞ –æ—Ç 15%' }
]

export default function ProfitFilterExamplesPage() {
  const [slider1Value, setSlider1Value] = useState([0])
  const [slider2Value, setSlider2Value] = useState([0])
  const [buttonValue, setButtonValue] = useState(0)
  const [cardValue, setCardValue] = useState(0)
  const [dropdownValue, setDropdownValue] = useState('0')
  const [tabValue, setTabValue] = useState('0')
  const [switchValue, setSwitchValue] = useState(false)
  const [rangeValue, setRangeValue] = useState([0, 100])

  return (
    <div className="container mx-auto p-6 space-y-12">
      <div className="text-center space-y-2">
        <h1 className="text-3xl font-bold">–í–∞—Ä–∏–∞–Ω—Ç—ã —Ñ–∏–ª—å—Ç—Ä–∞ –≤—ã–≥–æ–¥–Ω—ã—Ö —Å—Ç–∞–≤–æ–∫</h1>
        <p className="text-muted-foreground">–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ —É–¥–æ–±–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞</p>
      </div>

      {/* –í–∞—Ä–∏–∞–Ω—Ç 1: –£–ª—É—á—à–µ–Ω–Ω—ã–π —Å–ª–∞–π–¥–µ—Ä —Å –≤–∏–∑—É–∞–ª—å–Ω—ã–º–∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞–º–∏ */}
      <Card>
        <CardHeader>
          <CardTitle>–í–∞—Ä–∏–∞–Ω—Ç 1: –°–ª–∞–π–¥–µ—Ä —Å –≤–∏–∑—É–∞–ª—å–Ω—ã–º–∏ –º–∞—Ä–∫–µ—Ä–∞–º–∏</CardTitle>
          <CardDescription>–ü–ª–∞–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å –ø–æ–¥—Å–∫–∞–∑–∫–∞–º–∏ –∏ —Ü–≤–µ—Ç–æ–≤–æ–π –∏–Ω–¥–∏–∫–∞—Ü–∏–µ–π</CardDescription>
        </CardHeader>
        <CardContent className="space-y-6">
          <div className="space-y-4">
            <div className="flex items-center justify-between">
              <Label className="text-base font-medium">–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤—ã–≥–æ–¥–∞</Label>
              <TooltipProvider>
                <Tooltip>
                  <TooltipTrigger>
                    <Info className="w-4 h-4 text-muted-foreground" />
                  </TooltipTrigger>
                  <TooltipContent>
                    <p>–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å—Ç–∞–≤–∫–∏, –≥–¥–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –±—É–∫–º–µ–∫–µ—Ä–∞</p>
                    <p>–≤—ã—à–µ –ø—Ä–æ–≥–Ω–æ–∑–∞ ML –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç</p>
                  </TooltipContent>
                </Tooltip>
              </TooltipProvider>
            </div>

            <div className="space-y-3">
              <Slider
                value={slider1Value}
                onValueChange={setSlider1Value}
                max={20}
                step={1}
                className="relative"
              />

              <div className="flex justify-between text-xs text-muted-foreground">
                <span>–í—Å–µ</span>
                <span>5%</span>
                <span>10%</span>
                <span>15%</span>
                <span>20%</span>
              </div>

              <div className="flex items-center justify-between p-3 rounded-lg bg-muted/50">
                <span className="text-sm">
                  {slider1Value[0] === 0 ? '–ü–æ–∫–∞–∑–∞–Ω—ã –≤—Å–µ –º–∞—Ç—á–∏' : `–í—ã–≥–æ–¥–∞ –æ—Ç ${slider1Value[0]}%`}
                </span>
                <Badge variant={slider1Value[0] >= 15 ? 'default' : slider1Value[0] >= 8 ? 'secondary' : 'outline'}>
                  {slider1Value[0] === 0 ? 'üìä –í—Å–µ' : slider1Value[0] >= 15 ? 'üéØ –û—Ç–ª–∏—á–Ω—ã–µ' : slider1Value[0] >= 8 ? '‚úÖ –•–æ—Ä–æ—à–∏–µ' : '‚öñÔ∏è –ë–∞–∑–æ–≤—ã–µ'}
                </Badge>
              </div>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* –í–∞—Ä–∏–∞–Ω—Ç 2: –ì—Ä—É–ø–ø–∞ –∫–Ω–æ–ø–æ–∫ */}
      <Card>
        <CardHeader>
          <CardTitle>–í–∞—Ä–∏–∞–Ω—Ç 2: –ë—ã—Å—Ç—Ä—ã–π –≤—ã–±–æ—Ä –∫–Ω–æ–ø–∫–∞–º–∏</CardTitle>
          <CardDescription>–ü—Ä–æ—Å—Ç–æ–π –∏ –ø–æ–Ω—è—Ç–Ω—ã–π –≤—ã–±–æ—Ä –æ–¥–Ω–∏–º –∫–ª–∏–∫–æ–º</CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          <Label className="text-base font-medium">–£—Ä–æ–≤–µ–Ω—å –≤—ã–≥–æ–¥—ã</Label>
          <div className="grid grid-cols-2 md:grid-cols-4 gap-2">
            {profitLevels.map((level) => (
              <Button
                key={level.value}
                variant={buttonValue === level.value ? 'default' : 'outline'}
                onClick={() => setButtonValue(level.value)}
                className="h-auto flex-col py-3"
              >
                <span className="text-2xl mb-1">{level.icon}</span>
                <span className="text-sm font-medium">{level.label}</span>
                <span className="text-xs text-muted-foreground">{level.description}</span>
              </Button>
            ))}
          </div>
          {buttonValue > 0 && (
            <div className="p-3 rounded-lg bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800">
              <p className="text-sm text-green-800 dark:text-green-200">
                ‚úÖ –ü–æ–∫–∞–∑–∞–Ω—ã —Ç–æ–ª—å–∫–æ –≤—ã–≥–æ–¥–Ω—ã–µ —Å—Ç–∞–≤–∫–∏ —Å –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ–º –æ—Ç {buttonValue * 100}%
              </p>
            </div>
          )}
        </CardContent>
      </Card>

      {/* –í–∞—Ä–∏–∞–Ω—Ç 3: –ö–∞—Ä—Ç–æ—á–∫–∏ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º */}
      <Card>
        <CardHeader>
          <CardTitle>–í–∞—Ä–∏–∞–Ω—Ç 3: –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏</CardTitle>
          <CardDescription>–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ —É—Ä–æ–≤–Ω—è</CardDescription>
        </CardHeader>
        <CardContent>
          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-3">
            {profitLevels.map((level) => (
              <Card
                key={level.value}
                className={cn(
                  "cursor-pointer transition-all hover:shadow-md",
                  cardValue === level.value && "ring-2 ring-primary"
                )}
                onClick={() => setCardValue(level.value)}
              >
                <CardHeader className="p-4">
                  <div className="flex items-center justify-between">
                    <span className="text-2xl">{level.icon}</span>
                    {cardValue === level.value && (
                      <Badge variant="default" className="text-xs">–í—ã–±—Ä–∞–Ω–æ</Badge>
                    )}
                  </div>
                  <CardTitle className="text-base">{level.label}</CardTitle>
                  <CardDescription className="text-xs">
                    {level.description}
                  </CardDescription>
                </CardHeader>
              </Card>
            ))}
          </div>
        </CardContent>
      </Card>

      {/* –í–∞—Ä–∏–∞–Ω—Ç 4: –í—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ —Å –ø—Ä–µ–≤—å—é */}
      <Card>
        <CardHeader>
          <CardTitle>–í–∞—Ä–∏–∞–Ω—Ç 4: –ö–æ–º–ø–∞–∫—Ç–Ω—ã–π –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫</CardTitle>
          <CardDescription>–≠–∫–æ–Ω–æ–º–∏—Ç –º–µ—Å—Ç–æ, –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤</CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="space-y-2">
            <Label>–§–∏–ª—å—Ç—Ä –ø–æ –≤—ã–≥–æ–¥–µ</Label>
            <DropdownMenu>
              <DropdownMenuTrigger asChild>
                <Button variant="outline" className="w-full justify-between">
                  <span className="flex items-center gap-2">
                    {profitLevels.find(l => l.value.toString() === dropdownValue)?.icon}
                    {profitLevels.find(l => l.value.toString() === dropdownValue)?.label}
                  </span>
                  <ChevronDown className="ml-2 h-4 w-4" />
                </Button>
              </DropdownMenuTrigger>
              <DropdownMenuContent className="w-full">
                <DropdownMenuLabel>–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –≤—ã–≥–æ–¥—ã</DropdownMenuLabel>
                <DropdownMenuSeparator />
                <DropdownMenuRadioGroup value={dropdownValue} onValueChange={setDropdownValue}>
                  {profitLevels.map((level) => (
                    <DropdownMenuRadioItem key={level.value} value={level.value.toString()} className="py-3">
                      <div className="flex items-center gap-3">
                        <span className="text-xl">{level.icon}</span>
                        <div className="flex-1">
                          <div className="font-medium">{level.label}</div>
                          <div className="text-xs text-muted-foreground">{level.description}</div>
                        </div>
                      </div>
                    </DropdownMenuRadioItem>
                  ))}
                </DropdownMenuRadioGroup>
              </DropdownMenuContent>
            </DropdownMenu>
          </div>

          <div className="p-4 rounded-lg bg-muted/50 space-y-2">
            <div className="flex items-center gap-2 text-sm">
              <span className="font-medium">–¢–µ–∫—É—â–∏–π —Ñ–∏–ª—å—Ç—Ä:</span>
              <Badge variant="outline">
                {profitLevels.find(l => l.value.toString() === dropdownValue)?.label}
              </Badge>
            </div>
            <p className="text-xs text-muted-foreground">
              {dropdownValue === '0'
                ? '–û—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤—Å–µ –º–∞—Ç—á–∏ –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –≤—ã–≥–æ–¥–µ'
                : `–û—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –º–∞—Ç—á–∏ —Å –≤—ã–≥–æ–¥–æ–π –æ—Ç ${parseFloat(dropdownValue) * 100}%`
              }
            </p>
          </div>
        </CardContent>
      </Card>

      {/* –í–∞—Ä–∏–∞–Ω—Ç 5: –í–∫–ª–∞–¥–∫–∏ */}
      <Card>
        <CardHeader>
          <CardTitle>–í–∞—Ä–∏–∞–Ω—Ç 5: –ù–∞–≤–∏–≥–∞—Ü–∏—è –≤–∫–ª–∞–¥–∫–∞–º–∏</CardTitle>
          <CardDescription>–ß–µ—Ç–∫–æ–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º</CardDescription>
        </CardHeader>
        <CardContent>
          <Tabs value={tabValue} onValueChange={setTabValue}>
            <TabsList className="grid w-full grid-cols-4">
              {profitLevels.map((level) => (
                <TabsTrigger key={level.value} value={level.value.toString()} className="data-[state=active]:bg-primary data-[state=active]:text-primary-foreground">
                  <span className="hidden md:inline mr-2">{level.icon}</span>
                  <span className="text-xs md:text-sm">{level.label}</span>
                </TabsTrigger>
              ))}
            </TabsList>
            {profitLevels.map((level) => (
              <TabsContent key={level.value} value={level.value.toString()} className="mt-4">
                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center gap-2">
                      <span className="text-2xl">{level.icon}</span>
                      {level.label}
                    </CardTitle>
                    <CardDescription>{level.description}</CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-3">
                      <div className="flex items-center gap-2">
                        <Badge variant="outline" className={level.color}>
                          {level.value === 0 ? '–ë–µ–∑ —Ñ–∏–ª—å—Ç—Ä–∞' : `–ú–∏–Ω. ${level.value * 100}%`}
                        </Badge>
                        {level.value > 0 && (
                          <span className="text-sm text-muted-foreground">
                            –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –Ω–∞–¥ –ª–∏–Ω–∏–µ–π –±—É–∫–º–µ–∫–µ—Ä–∞
                          </span>
                        )}
                      </div>
                      {level.value === 0 && (
                        <p className="text-sm text-muted-foreground">
                          –ü–æ–∫–∞–∑–∞–Ω—ã –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–∞—Ç—á–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥—Ä—É–≥–∏–µ –≤–∫–ª–∞–¥–∫–∏ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –≤—ã–≥–æ–¥–µ.
                        </p>
                      )}
                      {level.value === 0.02 && (
                        <p className="text-sm text-muted-foreground">
                          –ë–∞–∑–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤.
                        </p>
                      )}
                      {level.value === 0.08 && (
                        <p className="text-sm text-muted-foreground">
                          –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å –º–µ–∂–¥—É –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Å—Ç–∞–≤–æ–∫ –∏ –∏—Ö –≤—ã–≥–æ–¥–Ω–æ—Å—Ç—å—é.
                        </p>
                      )}
                      {level.value === 0.15 && (
                        <p className="text-sm text-muted-foreground">
                          –¢–æ–ª—å–∫–æ —Å–∞–º—ã–µ –≤—ã–≥–æ–¥–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ–º.
                        </p>
                      )}
                    </div>
                  </CardContent>
                </Card>
              </TabsContent>
            ))}
          </Tabs>
        </CardContent>
      </Card>

      {/* –í–∞—Ä–∏–∞–Ω—Ç 6: –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å + —Å–ª–∞–π–¥–µ—Ä */}
      <Card>
        <CardHeader>
          <CardTitle>–í–∞—Ä–∏–∞–Ω—Ç 6: –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥</CardTitle>
          <CardDescription>–ë—ã—Å—Ç—Ä–æ–µ –≤–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ + —Ç–æ—á–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞</CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="flex items-center justify-between p-4 rounded-lg border">
            <div className="space-y-0.5">
              <Label htmlFor="profit-mode" className="text-base font-medium">
                –†–µ–∂–∏–º –≤—ã–≥–æ–¥–Ω—ã—Ö —Å—Ç–∞–≤–æ–∫
              </Label>
              <p className="text-sm text-muted-foreground">
                –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å—Ç–∞–≤–∫–∏ —Å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –æ–∂–∏–¥–∞–Ω–∏–µ–º
              </p>
            </div>
            <Switch
              id="profit-mode"
              checked={switchValue}
              onCheckedChange={setSwitchValue}
            />
          </div>

          {switchValue && (
            <div className="space-y-4 p-4 rounded-lg bg-muted/50 animate-in slide-in-from-top-2">
              <div className="space-y-2">
                <Label className="text-sm font-medium">–£—Ä–æ–≤–µ–Ω—å –≤—ã–≥–æ–¥—ã: {slider2Value[0]}%</Label>
                <Slider
                  value={slider2Value}
                  onValueChange={setSlider2Value}
                  max={30}
                  step={1}
                  className="relative"
                />
                <div className="flex justify-between text-xs text-muted-foreground">
                  <span>–õ—é–±–∞—è</span>
                  <span>10%</span>
                  <span>20%</span>
                  <span>30%</span>
                </div>
              </div>

              <div className="grid grid-cols-3 gap-2 text-center">
                <Button
                  variant="outline"
                  size="sm"
                  onClick={() => setSlider2Value([5])}
                  className="text-xs"
                >
                  ‚öñÔ∏è –ö–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω–æ (5%)
                </Button>
                <Button
                  variant="outline"
                  size="sm"
                  onClick={() => setSlider2Value([10])}
                  className="text-xs"
                >
                  ‚úÖ –û–ø—Ç–∏–º–∞–ª—å–Ω–æ (10%)
                </Button>
                <Button
                  variant="outline"
                  size="sm"
                  onClick={() => setSlider2Value([20])}
                  className="text-xs"
                >
                  üéØ –ê–≥—Ä–µ—Å—Å–∏–≤–Ω–æ (20%)
                </Button>
              </div>
            </div>
          )}
        </CardContent>
      </Card>

      {/* –í–∞—Ä–∏–∞–Ω—Ç 7: –î–∏–∞–ø–∞–∑–æ–Ω —Å –¥–≤—É–º—è –ø–æ–ª–∑—É–Ω–∫–∞–º–∏ */}
      <Card>
        <CardHeader>
          <CardTitle>–í–∞—Ä–∏–∞–Ω—Ç 7: –î–∏–∞–ø–∞–∑–æ–Ω –≤—ã–≥–æ–¥—ã</CardTitle>
          <CardDescription>–¢–æ—á–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è</CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="space-y-4">
            <div className="flex items-center justify-between">
              <Label className="text-base font-medium">–î–∏–∞–ø–∞–∑–æ–Ω –≤—ã–≥–æ–¥—ã</Label>
              <Badge variant="outline">
                {rangeValue[0]}% - {rangeValue[1]}%
              </Badge>
            </div>

            <Slider
              value={rangeValue}
              onValueChange={setRangeValue}
              max={100}
              step={5}
              minStepsBetweenThumbs={5}
              className="relative"
            />

            <div className="grid grid-cols-2 gap-3">
              <div className="p-3 rounded-lg border">
                <p className="text-xs text-muted-foreground mb-1">–ú–∏–Ω–∏–º—É–º</p>
                <p className="text-lg font-semibold">{rangeValue[0]}%</p>
              </div>
              <div className="p-3 rounded-lg border">
                <p className="text-xs text-muted-foreground mb-1">–ú–∞–∫—Å–∏–º—É–º</p>
                <p className="text-lg font-semibold">{rangeValue[1]}%</p>
              </div>
            </div>

            <div className="grid grid-cols-2 md:grid-cols-4 gap-2">
              <Button
                variant="outline"
                size="sm"
                onClick={() => setRangeValue([0, 100])}
                className="text-xs"
              >
                –í—Å–µ
              </Button>
              <Button
                variant="outline"
                size="sm"
                onClick={() => setRangeValue([5, 15])}
                className="text-xs"
              >
                –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ
              </Button>
              <Button
                variant="outline"
                size="sm"
                onClick={() => setRangeValue([10, 30])}
                className="text-xs"
              >
                –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ
              </Button>
              <Button
                variant="outline"
                size="sm"
                onClick={() => setRangeValue([20, 100])}
                className="text-xs"
              >
                –í—ã—Å–æ–∫–∏–µ
              </Button>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* –í–∞—Ä–∏–∞–Ω—Ç 8: –ü—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã */}
      <Card>
        <CardHeader>
          <CardTitle>–í–∞—Ä–∏–∞–Ω—Ç 8: –í–∏–∑—É–∞–ª—å–Ω–∞—è —à–∫–∞–ª–∞ –≤—ã–≥–æ–¥—ã</CardTitle>
          <CardDescription>–ù–∞–≥–ª—è–¥–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Ä–æ–≤–Ω–µ–π —Å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞–º–∏</CardDescription>
        </CardHeader>
        <CardContent>
          <div className="space-y-3">
            {profitLevels.map((level, index) => (
              <div
                key={level.value}
                className={cn(
                  "p-4 rounded-lg border-2 cursor-pointer transition-all",
                  buttonValue >= level.value
                    ? "border-primary bg-primary/5"
                    : "border-transparent bg-muted/50 hover:bg-muted"
                )}
                onClick={() => setButtonValue(level.value)}
              >
                <div className="flex items-center justify-between mb-2">
                  <div className="flex items-center gap-3">
                    <span className="text-2xl">{level.icon}</span>
                    <div>
                      <p className="font-medium">{level.label}</p>
                      <p className="text-sm text-muted-foreground">{level.description}</p>
                    </div>
                  </div>
                  {buttonValue >= level.value && (
                    <Badge variant="default">–ê–∫—Ç–∏–≤–Ω–æ</Badge>
                  )}
                </div>
                <div className="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2">
                  <div
                    className={cn(
                      "h-2 rounded-full transition-all",
                      index === 0 && "bg-gray-400 w-1/4",
                      index === 1 && "bg-blue-500 w-2/4",
                      index === 2 && "bg-green-500 w-3/4",
                      index === 3 && "bg-orange-500 w-full"
                    )}
                  />
                </div>
              </div>
            ))}
          </div>
        </CardContent>
      </Card>

      {/* –ò—Ç–æ–≥–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ */}
      <Card className="border-2 border-primary">
        <CardHeader>
          <CardTitle>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –≤—ã–±–æ—Ä—É</CardTitle>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="space-y-3">
            <div className="flex gap-3">
              <Badge variant="outline" className="mt-1">Mobile</Badge>
              <div>
                <p className="font-medium">–î–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤</p>
                <p className="text-sm text-muted-foreground">
                  –í–∞—Ä–∏–∞–Ω—Ç—ã 2 (–∫–Ω–æ–ø–∫–∏), 4 (dropdown) –∏–ª–∏ 6 (–ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å) - –∫–æ–º–ø–∞–∫—Ç–Ω—ã–µ –∏ —É–¥–æ–±–Ω—ã–µ –¥–ª—è —Ç–∞—á-—É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                </p>
              </div>
            </div>

            <div className="flex gap-3">
              <Badge variant="outline" className="mt-1">Desktop</Badge>
              <div>
                <p className="font-medium">–î–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞</p>
                <p className="text-sm text-muted-foreground">
                  –í–∞—Ä–∏–∞–Ω—Ç—ã 1 (—Å–ª–∞–π–¥–µ—Ä), 3 (–∫–∞—Ä—Ç–æ—á–∫–∏) –∏–ª–∏ 5 (–≤–∫–ª–∞–¥–∫–∏) - –∏—Å–ø–æ–ª—å–∑—É—é—Ç –±–æ–ª—å—à–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –¥–ª—è –ª—É—á—à–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏
                </p>
              </div>
            </div>

            <div className="flex gap-3">
              <Badge variant="outline" className="mt-1">Simple</Badge>
              <div>
                <p className="font-medium">–î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã</p>
                <p className="text-sm text-muted-foreground">
                  –í–∞—Ä–∏–∞–Ω—Ç 2 (–∫–Ω–æ–ø–∫–∏) - —Å–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π –∏ –ø–æ–Ω—è—Ç–Ω—ã–π, –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤
                </p>
              </div>
            </div>

            <div className="flex gap-3">
              <Badge variant="outline" className="mt-1">Pro</Badge>
              <div>
                <p className="font-medium">–î–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö</p>
                <p className="text-sm text-muted-foreground">
                  –í–∞—Ä–∏–∞–Ω—Ç—ã 6 (–∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π) –∏–ª–∏ 7 (–¥–∏–∞–ø–∞–∑–æ–Ω) - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≥–∏–±–∫–æ—Å—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–∫
                </p>
              </div>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  )
}